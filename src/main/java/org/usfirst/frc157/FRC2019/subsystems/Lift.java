// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc157.FRC2019.subsystems;


import org.usfirst.frc157.FRC2019.PID;
import org.usfirst.frc157.FRC2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Lift extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public WPI_TalonSRX lift;
    public PID upPID = new PID(0.5, 0, 0, 999999, 99999, 999999, 9999999);
    public PID downPID = new PID(0.5, 0, 0.00001, 999999, 99999, 999999, 9999999);
    public Encoder encoder;
    public static final float BOTTOM = 0;
    public static final float STARTUPRANGE = 0;
    public static final float STARTDOWNRANGE = 100;
    public static final float STARTCONSTRANGE = 10;
    public static final float ENDUPRANGE = 0;
    public static final float ENDDOWNRANGE = 15;
    public static final float ENDCONSTRANGE = 11;
    public static final float TOP = 200;
    
    public int holdPosition = 0;
    public moveType lastMoveType = moveType.hold;

    public static enum moveType
    {
        hold(0),
        toStartConstPoint(STARTCONSTRANGE+1),
        toEndConstPoint(ENDCONSTRANGE),
        toUpStartPoint(STARTUPRANGE),
        toUpEndPoint(ENDUPRANGE),
        toDownEndPoint(ENDDOWNRANGE),
        toDownStartPoint(ENDUPRANGE),
        toTop(TOP),
        toBottom(BOTTOM);

        public final float height;
        private moveType(float height) {this.height = height;}
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Lift() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        lift = new WPI_TalonSRX(6);
        encoder = new Encoder(8, 9, false, EncodingType.k4X);
        encoder.setDistancePerPulse(0.01968506996);     

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
    public void moveLift(double movement, moveType type)
    {
        if (type == moveType.hold)
        {
            double value = 0;

            if (lastMoveType != moveType.hold) {
                lastMoveType = moveType.hold;
                holdPosition = encoder.get();
            }
            value = downPID.pidCalculate(holdPosition, encoder.get());
            lift.set(value);
        }
        else
        {
            lastMoveType = type;
            double value = 0;
            if (encoder.getDistance() > type.height)
            {
                value = downPID.pidCalculate(type.height, encoder.getDistance());
            }
            else 
            {
                value = upPID.pidCalculate(type.height, encoder.getDistance());
            }
            lift.set(value);
        }

    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new LiftController());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

